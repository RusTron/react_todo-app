{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoFilter/TodoFilter.jsx","App.js","index.js"],"names":["TodoItem","items","editTitle","changeStatus","removeItem","useState","editId","setEditId","editedTitle","setEditedTitle","map","item","key","id","className","classNames","editing","completed","type","checked","onChange","onDoubleClick","title","onClick","value","target","trimLeft","onKeyDown","event","preventDefault","handleClick","TodoList","setTodos","setActiveCount","activeCount","readOnly","length","todoItems","htmlFor","find","filter","TodoFilter","isSelected","setIsSelected","filteredTodos","filters","text","href","selected","all","innerText","active","App","todos","setTitle","useEffect","localStorage","JSON","parse","getItem","setItem","stringify","todo","addTodo","Date","onSubmit","placeholder","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69aa7c6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ items, editTitle, changeStatus, removeItem }) => {\n  const [editId, setEditId] = useState(0);\n  const [editedTitle, setEditedTitle] = useState('');\n\n  const handleClick = (event) => {\n    event.preventDefault();\n\n    if (event.key === 'Enter') {\n      editTitle(editedTitle, editId);\n      setEditId(0);\n\n      return;\n    }\n\n    setEditId(0);\n  };\n\n  return (\n    <>\n      {items.map(item => (\n        <li\n          key={item.id}\n          className={classNames({\n            editing: editId === item.id,\n            completed: item.completed,\n          })}\n        >\n          {item.id !== editId && (\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                checked={item.completed}\n                onChange={() => changeStatus(item.id)}\n              />\n              <label\n                onDoubleClick={() => {\n                  setEditId(item.id);\n                  setEditedTitle(item.title);\n                }}\n              >\n                {item.title}\n              </label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => removeItem(item.id)}\n              />\n            </div>\n          )}\n          <input\n            type=\"text\"\n            className=\"edit\"\n            value={editedTitle}\n            onChange={({ target }) => setEditedTitle(target.value.trimLeft())}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter' || event.key === 'Escape') {\n                handleClick(event);\n              }\n            }\n            }\n          />\n        </li>\n      ))}\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  editTitle: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  removeItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ items, setTodos, setActiveCount, activeCount }) => {\n  const changeStatus = (id) => {\n    setTodos([...items].map((item) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n\n      return item;\n    }));\n\n    setActiveCount(items.find(item => item.id === id).completed\n      ? activeCount + 1\n      : activeCount - 1);\n  };\n\n  const changeAll = (value, todoItems) => {\n    if (value) {\n      setTodos(todoItems.map(item => ({ ...item, completed: true })));\n      setActiveCount(0);\n    } else {\n      setTodos(todoItems.map(item => ({ ...item, completed: false })));\n      setActiveCount(items.length);\n    }\n  };\n\n  const removeItem = (id) => {\n    setTodos(items.filter(item => item.id !== id));\n    setActiveCount(items.find(item => item.id).completed\n      ? activeCount\n      : activeCount - 1);\n  };\n\n  const editTitle = (value, editId) => {\n    setTodos(items.map((item) => {\n      if (item.id === editId) {\n        return { ...item, title: value };\n      }\n\n      return item;\n    }));\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        readOnly\n        checked={activeCount === 0 && items.length}\n        onChange={({ target }) => changeAll(target.checked, items)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {items.map(item => (\n          <li key={item.id}>\n            <input\n              type=\"text\"\n              className=\"edit\"\n            />\n          </li>\n        ))}\n\n        <TodoItem\n          items={items}\n          editTitle={editTitle}\n          changeStatus={changeStatus}\n          removeItem={removeItem}\n        />\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  setTodos: PropTypes.func.isRequired,\n  setActiveCount: PropTypes.func.isRequired,\n  activeCount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoFilter = ({\n  isSelected,\n  setIsSelected,\n  filteredTodos,\n  filters,\n}) => {\n  const handleClick = (text) => {\n    setIsSelected(text);\n    filteredTodos(text);\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({ selected: isSelected === filters.all })}\n          onClick={({ target }) => handleClick(target.innerText)}\n        >\n          {filters.all}\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({ selected: isSelected === filters.active })}\n          onClick={({ target }) => handleClick(target.innerText)}\n        >\n          {filters.active}\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({ selected: isSelected === filters.completed })}\n          onClick={({ target }) => handleClick(target.innerText)}\n        >\n          {filters.completed}\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodoFilter.propTypes = {\n  isSelected: PropTypes.bool.isRequired,\n  setIsSelected: PropTypes.func.isRequired,\n  filteredTodos: PropTypes.func.isRequired,\n  filters: PropTypes.shape({\n    all: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    completed: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nconst filters = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nconst { active, completed } = filters;\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [activeCount, setActiveCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isSelected, setIsSelected] = useState(filters.all);\n\n  useEffect(() => {\n    if (localStorage.todos) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n      setActiveCount(JSON.parse(localStorage.getItem('count')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n    localStorage.setItem('count', JSON.stringify(activeCount));\n  }, [todos, activeCount]);\n\n  const filteredTodos = (selected) => {\n    if (selected === active) {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (selected === completed) {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  };\n\n  const addTodo = () => {\n    const todo = {\n      title,\n      id: +new Date(),\n      completed: false,\n    };\n\n    setTodos([...todos, todo]);\n    setTitle('');\n    setActiveCount(activeCount + 1);\n  };\n\n  const clearComleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>TodoS</h1>\n\n        <form onSubmit={addTodo}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={({ target }) => setTitle(target.value.trimLeft())}\n            onKeyPress={(event) => {\n              if (event.key === 'Enter') {\n                event.preventDefault();\n                addTodo();\n              }\n            }}\n          />\n        </form>\n      </header>\n      <TodoList\n        items={filteredTodos(isSelected)}\n        setTodos={setTodos}\n        setActiveCount={setActiveCount}\n        activeCount={activeCount}\n        filteredTodos={filteredTodos()}\n      />\n      {todos.length !== 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {activeCount === 1 ? `1 item left` : `${activeCount} items left`}\n          </span>\n\n          <TodoFilter\n            isSelected={isSelected}\n            setIsSelected={setIsSelected}\n            filteredTodos={filteredTodos}\n            filters={filters}\n          />\n          {activeCount !== todos.length && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={clearComleted}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}